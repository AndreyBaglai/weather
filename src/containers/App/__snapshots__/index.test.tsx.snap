// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App render App component 1`] = `
<DocumentFragment>
  <div
    class="container"
  >
    <header
      class="header"
    >
      <form
        class="form"
      >
        <input
          class="cityField"
          id="city"
          name="city"
          placeholder="placeholder"
          type="text"
        />
        <button
          class="addBtn"
        >
          buttons.add
        </button>
      </form>
      <button
        class="removeAll"
      >
        buttons.remove
      </button>
      <select
        class="selectLang"
        id="lang"
        name="language"
      >
        <option
          value="en"
        >
          EN
        </option>
        <option
          value="ru"
        >
          RU
        </option>
        <option
          value="uk"
        >
          UK
        </option>
        <option
          value="he"
        >
          HE
        </option>
      </select>
    </header>
    <h2
      class="text"
    >
      empty
    </h2>
  </div>
</DocumentFragment>
`;

exports[`App render correctly 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
        data-testid="container-element"
      >
        <header
          class="header"
          data-testid="header-element"
        >
          <form
            class="form"
          >
            <input
              class="cityField"
              id="city"
              name="city"
              placeholder="placeholder"
              type="text"
            />
            <button
              class="addBtn"
            >
              buttons.add
            </button>
          </form>
          <button
            class="removeAll"
          >
            buttons.remove
          </button>
          <select
            class="selectLang"
            id="lang"
            name="language"
          >
            <option
              value="en"
            >
              EN
            </option>
            <option
              value="ru"
            >
              RU
            </option>
            <option
              value="uk"
            >
              UK
            </option>
            <option
              value="he"
            >
              HE
            </option>
          </select>
        </header>
        <h2
          class="text"
        >
          empty
        </h2>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
      data-testid="container-element"
    >
      <header
        class="header"
        data-testid="header-element"
      >
        <form
          class="form"
        >
          <input
            class="cityField"
            id="city"
            name="city"
            placeholder="placeholder"
            type="text"
          />
          <button
            class="addBtn"
          >
            buttons.add
          </button>
        </form>
        <button
          class="removeAll"
        >
          buttons.remove
        </button>
        <select
          class="selectLang"
          id="lang"
          name="language"
        >
          <option
            value="en"
          >
            EN
          </option>
          <option
            value="ru"
          >
            RU
          </option>
          <option
            value="uk"
          >
            UK
          </option>
          <option
            value="he"
          >
            HE
          </option>
        </select>
      </header>
      <h2
        class="text"
      >
        empty
      </h2>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`App take a snapshot when  1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
        data-testid="container-element"
      >
        <header
          class="header"
          data-testid="header-element"
        >
          <form
            class="form"
          >
            <input
              class="cityField"
              id="city"
              name="city"
              placeholder="placeholder"
              type="text"
            />
            <button
              class="addBtn"
            >
              buttons.add
            </button>
          </form>
          <button
            class="removeAll"
          >
            buttons.remove
          </button>
          <select
            class="selectLang"
            id="lang"
            name="language"
          >
            <option
              value="en"
            >
              EN
            </option>
            <option
              value="ru"
            >
              RU
            </option>
            <option
              value="uk"
            >
              UK
            </option>
            <option
              value="he"
            >
              HE
            </option>
          </select>
        </header>
        <h2
          class="text"
        >
          empty
        </h2>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
      data-testid="container-element"
    >
      <header
        class="header"
        data-testid="header-element"
      >
        <form
          class="form"
        >
          <input
            class="cityField"
            id="city"
            name="city"
            placeholder="placeholder"
            type="text"
          />
          <button
            class="addBtn"
          >
            buttons.add
          </button>
        </form>
        <button
          class="removeAll"
        >
          buttons.remove
        </button>
        <select
          class="selectLang"
          id="lang"
          name="language"
        >
          <option
            value="en"
          >
            EN
          </option>
          <option
            value="ru"
          >
            RU
          </option>
          <option
            value="uk"
          >
            UK
          </option>
          <option
            value="he"
          >
            HE
          </option>
        </select>
      </header>
      <h2
        class="text"
      >
        empty
      </h2>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`App take a snapshot when render 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="container"
        data-testid="container-element"
      >
        <header
          class="header"
          data-testid="header-element"
        >
          <form
            class="form"
          >
            <input
              class="cityField"
              id="city"
              name="city"
              placeholder="placeholder"
              type="text"
            />
            <button
              class="addBtn"
            >
              buttons.add
            </button>
          </form>
          <button
            class="removeAll"
          >
            buttons.remove
          </button>
          <select
            class="selectLang"
            id="lang"
            name="language"
          >
            <option
              value="en"
            >
              EN
            </option>
            <option
              value="ru"
            >
              RU
            </option>
            <option
              value="uk"
            >
              UK
            </option>
            <option
              value="he"
            >
              HE
            </option>
          </select>
        </header>
        <h2
          class="text"
        >
          empty
        </h2>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="container"
      data-testid="container-element"
    >
      <header
        class="header"
        data-testid="header-element"
      >
        <form
          class="form"
        >
          <input
            class="cityField"
            id="city"
            name="city"
            placeholder="placeholder"
            type="text"
          />
          <button
            class="addBtn"
          >
            buttons.add
          </button>
        </form>
        <button
          class="removeAll"
        >
          buttons.remove
        </button>
        <select
          class="selectLang"
          id="lang"
          name="language"
        >
          <option
            value="en"
          >
            EN
          </option>
          <option
            value="ru"
          >
            RU
          </option>
          <option
            value="uk"
          >
            UK
          </option>
          <option
            value="he"
          >
            HE
          </option>
        </select>
      </header>
      <h2
        class="text"
      >
        empty
      </h2>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
