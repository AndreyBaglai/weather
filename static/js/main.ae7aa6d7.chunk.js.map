{"version":3,"sources":["components/Card/WeatherInfo/styles.module.scss","components/Form/styles.module.scss","components/Card/Graphic/styles.module.scss","components/Header/styles.module.scss","containers/App/styles.module.scss","components/SelectLanguage/styles.module.scss","components/Loader/styles.module.scss","components/Main/styles.module.scss","components/Card/styles.module.scss","components/Button/index.tsx","stores/Language.ts","stores/Cards.ts","stores/Loader.ts","stores/index.ts","services/weather-api.ts","utils/const.ts","services/localStorage.ts","sources/icons/graphic.svg","components/Form/index.tsx","components/SelectLanguage/index.tsx","components/Header/index.tsx","components/Loader/index.tsx","components/Card/Graphic/index.tsx","shared/format-data.ts","components/Card/WeatherInfo/index.tsx","components/Card/index.tsx","components/Main/index.tsx","shared/convert-temperature.ts","containers/App/index.tsx","config/i18n.ts","index.tsx"],"names":["module","exports","Button","handler","classBtn","children","className","onClick","makeObservable","this","observable","action","newLang","lang","card","isRepeatCard","cards","unshift","some","item","city","toLowerCase","description","id","find","filter","newTemperature","map","temperature","isLoading","RootStore","languageStore","cardsStore","loaderStore","rootStore","StoreContext","createContext","useStore","store","useContext","Error","getWeatherByCity","fetch","process","then","res","status","json","data","COLLECTION_CARDS","CURRENT_LANG","getCardsFromLS","localStorage","getItem","JSON","parse","setCardsToLS","setItem","stringify","removeCardFromLS","length","updateCardByIdInLS","getLangFromLS","setLangToLS","_path","Form","useState","isNotFound","setIsNotFound","isRepeatCity","setIsRepeatCity","useTranslation","t","i18n","useForm","register","handleSubmit","reset","formState","errors","isSubmitSuccessful","useEffect","onSubmitForm","a","response","setTimeout","uniqId","name","time","dt","country","sys","main","temp","humidity","pressure","feels","feels_like","icon","weather","text_icon","wind_speed","wind","speed","isCelsius","addCard","console","log","styles","form","onSubmit","type","cityField","language","placeholder","pattern","value","message","error","addBtn","langs","en","nativeName","ru","uk","he","SelectLanguage","observer","onSelectLang","event","toggleLoader","target","selectedLang","changeLanguage","cityNames","getAllNamesCity","preparedRequests","Promise","resolve","_","all","weatherInfo","newCards","updateCards","changeLang","selectLang","onChange","defaultValue","Object","keys","toUpperCase","Header","header","removeAll","removeAllCards","removeItem","Loader","loader","_excluded","_extends","assign","i","arguments","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgGraphic","_ref","svgRef","title","titleId","props","xmlns","viewBox","ref","fill","fillOpacity","d","ForwardRef","Graphic","graphic","tempList","redGraphic","blueGraphic","week","formatTime","date","Date","hours","getHours","minutes","getMinutes","formatDate","monthIdx","getMonth","dayIdx","getDay","getDate","shortMonth","day","formatTemperature","roundedTemperature","Math","ceil","abs","WeatherInfo","Trans","i18nKey","values","orangeText","blueText","Card","onRemoveCard","cardInfo","onChangeInCelsius","onChangeInFahrenheit","String","style","backgroundColor","removeCard","cardTop","countryInfo","weatherIcon","src","alt","textIcon","toLocaleLowerCase","cardBottom","temperatureWrapper","mainTemperature","metric","classNames","celsius","active","fahrenheit","Main","currentTarget","dataset","currentCard","getCardById","updateCardTemperature","floor","parentElement","removeCardById","App","currentLang","container","text","use","Backend","LanguageDetector","initReactI18next","init","backend","loadPath","window","origin","react","useSuspense","debug","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae7aa6d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherInfo\":\"styles_weatherInfo__Fxs3u\",\"blueText\":\"styles_blueText__2SkLs\",\"orangeText\":\"styles_orangeText__3yYNI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3EBa3\",\"cityField\":\"styles_cityField__X_G8w\",\"error\":\"styles_error__226dO\",\"addBtn\":\"styles_addBtn__2cTns\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphic\":\"styles_graphic__fDmFu\",\"tempList\":\"styles_tempList__1bNkv\",\"week\":\"styles_week__pPTkJ\",\"redGraphic\":\"styles_redGraphic__2QBsi\",\"blueGraphic\":\"styles_blueGraphic__DeTgc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"styles_header__bFteW\",\"removeAll\":\"styles_removeAll__7zdrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1moU1\",\"text\":\"styles_text__2aAIj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectLang\":\"styles_selectLang__ZQ06w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"styles_loader__KW6Vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles_main__xrIMk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__etA8J\",\"removeCard\":\"styles_removeCard__3LVBh\",\"countryInfo\":\"styles_countryInfo__1B1uy\",\"country\":\"styles_country__2X5-F\",\"date\":\"styles_date__aDN0P\",\"cardTop\":\"styles_cardTop__PZ0Pr\",\"cardBottom\":\"styles_cardBottom__3gCQ-\",\"weatherIcon\":\"styles_weatherIcon__3o0uX\",\"icon\":\"styles_icon__3t6wJ\",\"temperatureWrapper\":\"styles_temperatureWrapper__PepwB\",\"feels\":\"styles_feels__1BbQ3\",\"temperature\":\"styles_temperature__v10fN\",\"metric\":\"styles_metric__2gzdV\",\"celsius\":\"styles_celsius__3uEzB\",\"fahrenheit\":\"styles_fahrenheit__3gzdm\",\"active\":\"styles_active__ywbG_\"};","import React from 'react'\r\n\r\ninterface IProps {\r\n  handler?: any;\r\n  classBtn: string;\r\n  id?: string;\r\n}\r\n\r\nconst Button: React.FC<IProps> = ({ handler, classBtn, children }) => {\r\n  return (\r\n    <button className={classBtn} onClick={handler}>\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button;","import { action, makeObservable, observable } from 'mobx';\n\nclass Store {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable lang: string = 'en';\n\n  @action\n  changeLang = (newLang: string) => {\n    this.lang = newLang;\n  };\n}\n\nexport default new Store();\n","import { action, makeObservable, observable } from 'mobx';\nimport { CardModel } from '../types/Card';\n\nclass Store {\n  constructor() {\n    makeObservable(this);\n  }\n\n  @observable cards: CardModel[] = [];\n\n  @action\n  addCard(card: CardModel) {\n    if (this.isRepeatCard(card)) return;\n    this.cards.unshift(card);\n  }\n\n  @action\n  isRepeatCard(card: CardModel) {\n    return this.cards.some((item: CardModel) => {\n      return (\n        item.city.toLowerCase() === card.city.toLowerCase() &&\n        item.description?.toLowerCase() === card.description?.toLowerCase()\n      );\n    });\n  }\n\n  @action\n  getCardById(id: string) {\n    return this.cards.find((card: CardModel) => card.id === id);\n  }\n\n  @action\n  removeCardById(id: string) {\n    this.cards = this.cards.filter((card: CardModel) => card.id !== id);\n  }\n\n  @action\n  updateCardTemperature(newTemperature: number, id: string) {\n    this.cards = this.cards.map((card: CardModel) => {\n      if (card.id === id) {\n        card.temperature = newTemperature;\n      }\n      return card;\n    });\n  }\n\n  @action\n  getAllNamesCity() {\n    return this.cards.map((card: CardModel) => card.city);\n  }\n  \n  @action\n  updateCards(cards: CardModel[]) {\n    this.cards = [...cards];\n  }\n\n  @action\n  removeAllCards() {\n    this.cards = [];\n  }\n}\n\nexport default new Store();\n","import { action, makeObservable, observable } from 'mobx';\r\n\r\nclass Store {\r\n  constructor() {\r\n    makeObservable(this);\r\n  }\r\n\r\n  @observable isLoading = false;\r\n  \r\n  @action\r\n  toggleLoader = () => this.isLoading = !this.isLoading;\r\n}\r\n\r\nexport default new Store();\r\n","import { createContext, useContext } from 'react';\r\nimport { observable } from 'mobx';\r\n\r\nimport languageStore from './Language';\r\nimport cardsStore from './Cards';\r\nimport loaderStore from './Loader';\r\n\r\nclass RootStore {\r\n  @observable languageStore = languageStore;\r\n  @observable cardsStore = cardsStore;\r\n  @observable loaderStore = loaderStore;\r\n}\r\n\r\nconst rootStore = new RootStore();\r\n\r\nexport const StoreContext = createContext<RootStore>(rootStore);\r\n\r\nexport const useStore = (): RootStore => {\r\n  const store = useContext(StoreContext);\r\n  if (!store) {\r\n    throw new Error('You have forgot to use StoreProvider, shame on you.');\r\n  }\r\n  return store;\r\n};\r\n\r\nexport default new RootStore();","import { NOT_FOUND_CODE } from \"../utils/const\";\n\nexport const getWeatherByCity = (city: string, lang = 'en') => {\n  return fetch(`${process.env.REACT_APP_WEATHER_URL}?q=${city}&units=metric&lang=${lang}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`)\n    .then((res: Response) => {\n      if (res.status === NOT_FOUND_CODE) return;\n      return res.json();\n    })\n    .then((data) => data);\n}\n","export const SHOW_TOOLTIP_TIME = 2000;\nexport const NOT_FOUND_CODE = 404;","import { CardModel } from \"../types/Card\";\n\nconst COLLECTION_CARDS = 'cards';\nconst CURRENT_LANG = 'lang';\n\nexport function getCardsFromLS(): CardModel[] | [] {\n  const cards = localStorage.getItem(COLLECTION_CARDS);\n  if (cards) return JSON.parse(cards);\n  return []\n}\n\nexport function setCardsToLS(cards: CardModel[]): void {\n  localStorage.setItem(COLLECTION_CARDS, JSON.stringify(cards));\n}\n\nexport function removeAllCardsFromLS() {\n  localStorage.removeItem(COLLECTION_CARDS);\n}\n\nexport function removeCardFromLS(id: string) {\n  const cards = getCardsFromLS();\n  if (cards.length) {\n    const updateCards = cards.filter((card: CardModel) => card.id !== id);\n    setCardsToLS(updateCards);\n  }\n}\n\nexport function updateCardByIdInLS(card: CardModel, id: string) {\n  removeCardFromLS(id);\n  const cards = getCardsFromLS();\n  setCardsToLS([card, ...cards]);\n}\n\nexport function getLangFromLS(): string {\n  const lang = localStorage.getItem(CURRENT_LANG);\n  if (lang) return JSON.parse(lang);\n  return '';\n}\n\nexport function setLangToLS(lang: string): void {\n  localStorage.setItem(CURRENT_LANG, JSON.stringify(lang));\n}","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgGraphic(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 1440 320\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#ff715b\",\n    fillOpacity: 1,\n    d: \"M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,250.7C1248,256,1344,288,1392,304L1440,320L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGraphic);\nexport default __webpack_public_path__ + \"static/media/graphic.64059c71.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport uniqId from 'uniqid';\nimport { useForm } from 'react-hook-form';\nimport { useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\n\nimport { useStore } from 'stores';\n\nimport { IInputs } from 'types/Input';\nimport { CardModel } from 'types/Card';\n\nimport { getWeatherByCity } from 'services/weather-api';\nimport { setCardsToLS } from 'services/localStorage';\n\nimport { SHOW_TOOLTIP_TIME } from 'utils/const';\n\nimport styles from './styles.module.scss';\nimport i18n from 'config/i18n';\n\nconst Form: React.FC = () => {\n  const [isNotFound, setIsNotFound] = useState(false);\n  const [isRepeatCity, setIsRepeatCity] = useState(false);\n  const { t, i18n } = useTranslation();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors, isSubmitSuccessful },\n  } = useForm<IInputs>();\n  const { cardsStore, languageStore } = useStore();\n\n  useEffect(() => {\n    if (isSubmitSuccessful) {\n      reset({ city: '' });\n    }\n  }, [isSubmitSuccessful, reset]);\n\n  const onSubmitForm = async ({ city }: IInputs) => {\n    try {\n      if (city === '') return;\n\n      const response = await getWeatherByCity(city, languageStore.lang);\n\n      if (!response) {\n        setIsNotFound(true);\n        setTimeout(() => setIsNotFound(false), SHOW_TOOLTIP_TIME);\n      }\n\n      const card: CardModel = {\n        id: uniqId(),\n        city: response.name,\n        time: response.dt,\n        country: response.sys.country,\n        temperature: response.main.temp,\n        humidity: response.main.humidity,\n        pressure: response.main.pressure,\n        feels: response.main.feels_like,\n        icon: response.weather[0].icon,\n        text_icon: response.weather[0].main,\n        description: response.weather[0].description,\n        wind_speed: response.wind.speed,\n        isCelsius: true,\n      };\n\n      if (cardsStore.isRepeatCard(card)) {\n        setTimeout(() => setIsRepeatCity(false), SHOW_TOOLTIP_TIME);\n        setIsRepeatCity(true);\n      }\n\n      cardsStore.addCard(card);\n      setCardsToLS(cardsStore.cards);\n    } catch (err) {\n      console.log(`Invalid city name ${err}`);\n    }\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit(onSubmitForm)}>\n      <input\n        type=\"text\"\n        className={styles.cityField}\n        id=\"city\"\n        lang={i18n.language}\n        placeholder={t('placeholder')}\n        {...register('city', {\n          pattern: {\n            value: /^([a-zA-Z\\u0080-\\u024F]+(?:. |-| |'))*[a-zA-Zа-яА-Я\\u0080-\\u024F]*$/,\n            message: t('tooltips.validate'),\n          },\n        })}\n      />\n      {errors.city && <p className={styles.error}>{errors.city.message}</p>}\n      {isNotFound && <p className={styles.error}>{t('tooltips.not_found')}</p>}\n      {isRepeatCity && <p className={styles.error}>{t('tooltips.city_repeat')}</p>}\n      <Button classBtn={styles.addBtn} id=\"addBtn\">\n        {t('buttons.add')}\n      </Button>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport uniqId from 'uniqid';\nimport { useTranslation } from 'react-i18next';\n\nimport { useStore } from 'stores';\n\nimport { CardModel } from 'types/Card';\nimport { ILanguages } from 'types/Languages';\nimport { IResponseWeather } from 'types/ResponseWeather';\n\nimport { getLangFromLS, setCardsToLS, setLangToLS } from 'services/localStorage';\nimport { getWeatherByCity } from 'services/weather-api';\n\nimport styles from './styles.module.scss';\n\nconst langs: ILanguages = {\n  en: { nativeName: 'English' },\n  ru: { nativeName: 'Russian' },\n  uk: { nativeName: 'Ukraine' },\n  he: { nativeName: 'Hebrew' },\n};\n\nconst SelectLanguage: React.FC = observer(() => {\n  const { cardsStore, languageStore, loaderStore } = useStore();\n  const { i18n } = useTranslation();\n\n  const onSelectLang = async (event: React.ChangeEvent) => {\n    loaderStore.toggleLoader();\n    \n    const target = event.target as HTMLOptionElement;\n    const selectedLang = target.value;\n    i18n.changeLanguage(selectedLang);\n\n    const cityNames = cardsStore.getAllNamesCity();\n    \n    const preparedRequests: Promise<IResponseWeather>[] = cityNames.map(\n      (city: string) =>\n        new Promise((resolve, _) => {\n          resolve(getWeatherByCity(city, selectedLang));\n        }),\n    );\n\n    const newCards = await Promise.all(preparedRequests).then((response) =>\n      response.map((item: IResponseWeather) => {\n        const weatherInfo = item.weather && item.weather[0];\n        const card: CardModel = {\n          id: uniqId(),\n          city: item.name,\n          time: item.dt,\n          country: item.sys.country,\n          temperature: item.main.temp,\n          humidity: item.main.humidity,\n          pressure: item.main.pressure,\n          feels: item.main.feels_like,\n          icon: weatherInfo && weatherInfo.icon,\n          text_icon: weatherInfo && weatherInfo.main,\n          description: weatherInfo && weatherInfo.description,\n          wind_speed: item.wind.speed,\n          isCelsius: true,\n        };\n\n        return card;\n      }),\n    );\n\n    cardsStore.updateCards(newCards);\n    languageStore.changeLang(selectedLang);\n\n    setCardsToLS(newCards);\n    setLangToLS(selectedLang);\n\n    setTimeout(() => {\n      loaderStore.toggleLoader();\n    }, 1000);\n  };\n\n  return (\n    <select\n      name=\"language\"\n      id=\"lang\"\n      className={styles.selectLang}\n      onChange={onSelectLang}\n      defaultValue={getLangFromLS()}>\n      {Object.keys(langs).map((lang: string) => (\n        <option key={lang} value={lang}>\n          {lang.toUpperCase()}\n        </option>\n      ))}\n    </select>\n  );\n});\n\nexport default SelectLanguage;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport Form from 'components/Form';\nimport SelectLanguage from 'components/SelectLanguage';\nimport Button from 'components/Button';\n\nimport { useStore } from 'stores';\nimport { removeAllCardsFromLS } from 'services/localStorage';\n\nimport styles from './styles.module.scss';\n\nconst Header: React.FC = () => {\n  const { cardsStore } = useStore();\n  const { t } = useTranslation();\n\n  const onRemoveAllCards = () => {\n    cardsStore.removeAllCards();\n    removeAllCardsFromLS();\n  }\n  \n  return (\n    <header className={styles.header}>\n      <Form />\n      <Button classBtn={styles.removeAll} handler={onRemoveAllCards}>{t('buttons.remove')}</Button>\n      <SelectLanguage />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst Loader: React.FC = () => {\r\n  const { t } = useTranslation();\r\n  \r\n  return <h2 className={styles.loader}>{t('loader')}</h2>;\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react'\r\n\r\nimport { ReactComponent as GraphicIcon } from 'sources/icons/graphic.svg';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  temperature: number;\r\n}\r\n\r\nconst Graphic: React.FC<IProps> = ({ temperature }) => {\r\n  return (\r\n    <div className={styles.graphic}>\r\n    <ul className={styles.tempList}>\r\n        <li>10</li>\r\n        <li>13</li>\r\n        <li>16</li>\r\n        <li>13</li>\r\n        <li>10</li>\r\n        <li>10</li>\r\n        <li>07</li>\r\n      </ul>\r\n\r\n      <GraphicIcon className={temperature > 0 ? styles.redGraphic : styles.blueGraphic}/>\r\n\r\n      <ul className={styles.week}>\r\n        <li>19.04</li>\r\n        <li>20.04</li>\r\n        <li>21.04</li>\r\n        <li>22.04</li>\r\n        <li>23.04</li>\r\n        <li>24.04</li>\r\n        <li>25.04</li>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Graphic;","import { TFunction } from \"react-i18next\";\r\n\r\nexport const formatTime = () => {\r\n  const date = new Date();\r\n  const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\r\n  const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\r\n\r\n  return `${hours}:${minutes}`;\r\n};\r\n\r\nexport const formatDate = (t: TFunction<\"translation\">, lang: string) => {\r\n  const time = new Date();\r\n  const monthIdx = time.getMonth();\r\n  const dayIdx = time.getDay();\r\n  const date = time.getDate();\r\n\r\n  const shortMonth = t(`months.month_${monthIdx}`);\r\n  const day = t(`days.day_${dayIdx}`);\r\n\r\n  return lang === 'he' ? `${day} ${shortMonth} ${date},`: `${day}, ${date} ${shortMonth},`;\r\n};\r\n\r\nexport const formatTemperature = (temperature: number, lang: string) => {\r\n  const roundedTemperature = Math.ceil(temperature);\r\n  if (roundedTemperature === 0) return '0';\r\n\r\n  if (lang === 'he') {\r\n    return roundedTemperature > 0 ? `${roundedTemperature}+` : `${Math.abs(roundedTemperature)}-`;\r\n  } else {\r\n    return roundedTemperature > 0 ? `+${roundedTemperature}` : `-${roundedTemperature}`;\r\n  }\r\n};","import React from 'react';\r\nimport { Trans } from 'react-i18next';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\ninterface IProps {\r\n  description: string | null | undefined;\r\n  wind: number;\r\n  humidity: number;\r\n  pressure: number;\r\n  temperature: number;\r\n}\r\n\r\nconst WeatherInfo: React.FC<IProps> = ({ description, wind, humidity, pressure, temperature }) => {\r\n  return (\r\n    <div className={styles.weatherInfo}>\r\n      <p>{description}</p>\r\n      <p>\r\n        <Trans i18nKey=\"weather.wind\" values={{ value: wind }}>\r\n          Wind <span className={temperature >= 0 ? styles.orangeText : styles.blueText}>m/s</span>\r\n        </Trans>\r\n      </p>\r\n      <p>\r\n        <Trans i18nKey=\"weather.humidity\" values={{ value: humidity }}>\r\n          Humidity <span className={temperature >= 0 ? styles.orangeText : styles.blueText}>%</span>\r\n        </Trans>\r\n      </p>\r\n      <p>\r\n        <Trans i18nKey=\"weather.pressure\" values={{ value: pressure }}>\r\n          Pressure <span className={temperature >= 0 ? styles.orangeText : styles.blueText}>Pa</span>\r\n        </Trans>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Trans, useTranslation } from 'react-i18next';\n\nimport Button from 'components/Button';\n\nimport Graphic from './Graphic';\n\nimport { CardModel } from 'types/Card';\nimport { formatDate, formatTemperature, formatTime } from 'shared/format-data';\n\nimport styles from './styles.module.scss';\nimport WeatherInfo from './WeatherInfo';\n\ninterface IProps {\n  onChangeInCelsius: (event: React.MouseEvent) => void;\n  onRemoveCard: (event: React.MouseEvent) => void;\n  onChangeInFahrenheit: (event: React.MouseEvent) => void;\n  cardInfo: CardModel;\n}\n\nconst Card: React.FC<IProps> = ({\n  onRemoveCard,\n  cardInfo,\n  onChangeInCelsius,\n  onChangeInFahrenheit,\n}) => {\n  const { t, i18n } = useTranslation();\n\n  return (\n    <div\n      className={styles.card}\n      id={String(cardInfo.id)}\n      style={{ backgroundColor: cardInfo.temperature < 0 ? '#F1F2FF' : '#fff1fe' }}>\n      <Button classBtn={styles.removeCard} handler={onRemoveCard}>\n        X\n      </Button>\n\n      <div className={styles.cardTop}>\n        <div className={styles.countryInfo}>\n          <div className={styles.country}>\n            {cardInfo.city}, {cardInfo.country}\n          </div>\n          <div className={styles.date}>\n            {formatDate(t, i18n.language)} {formatTime()}\n          </div>\n        </div>\n\n        <div className={styles.weatherIcon}>\n          <img\n            className={styles.icon}\n            src={`${process.env.REACT_APP_WEATHER_ICON_URL}${cardInfo.icon}@2x.png`}\n            alt=\"Icon\"\n          />\n          <p className={styles.textIcon}>{t(`weather.descriptions.description_${cardInfo.text_icon?.toLocaleLowerCase()}`)}</p>\n        </div>\n      </div>\n\n      <Graphic temperature={cardInfo.temperature} />\n\n      <div className={styles.cardBottom}>\n        <div className={styles.temperatureWrapper}>\n          <div className={styles.mainTemperature}>\n            <span className={styles.temperature}>\n              {formatTemperature(cardInfo.temperature, i18n.language)}\n            </span>\n            <span className={styles.metric}>\n              <span\n                data-id={cardInfo.id}\n                onClick={onChangeInCelsius}\n                className={classNames(styles.celsius, { [styles.active]: cardInfo.isCelsius })}>\n                &deg;C\n              </span>{' '}\n              |{' '}\n              <span\n                data-id={cardInfo.id}\n                onClick={onChangeInFahrenheit}\n                className={classNames(styles.fahrenheit, { [styles.active]: !cardInfo.isCelsius })}>\n                &deg;F\n              </span>\n            </span>\n          </div>\n          <div className={styles.feels}>\n            {t('weather.feels', {\n              value: formatTemperature(Math.ceil(cardInfo.feels), i18n.language),\n            })}\n          </div>\n        </div>\n\n        <WeatherInfo temperature={Math.ceil(cardInfo.temperature)} description={cardInfo.description} wind={cardInfo.wind_speed} humidity={cardInfo.humidity} pressure={cardInfo.pressure} />\n      </div>\n    </div>\n  );\n};\n\nexport default Card;","import React from 'react';\nimport { observer } from 'mobx-react-lite';\n\nimport Loader from 'components/Loader';\nimport Card from 'components/Card';\n\nimport { useStore } from 'stores';\nimport { CardModel } from 'types/Card';\n\nimport { removeCardFromLS, updateCardByIdInLS } from 'services/localStorage';\nimport { convertToCelsius, convertToFahrenheit } from 'shared/convert-temperature';\n\nimport styles from './styles.module.scss';\n\nconst Main: React.FC = observer(() => {\n  const { loaderStore, cardsStore } = useStore();\n\n  const onChangeInCelsius = (event: React.MouseEvent) => {\n    const targetElem = event.currentTarget as HTMLElement;\n    const id = targetElem.dataset.id;\n\n    if (id) {\n      const currentCard: CardModel | undefined = cardsStore.getCardById(id);\n\n      if (currentCard && !currentCard.isCelsius) {\n        currentCard.isCelsius = true;\n        currentCard.temperature = convertToFahrenheit(currentCard.temperature);\n\n        cardsStore.updateCardTemperature(currentCard.temperature, id);\n        updateCardByIdInLS(currentCard, id);\n      }\n    }\n  };\n\n  const onChangeInFahrenheit = ({ currentTarget }: React.MouseEvent) => {\n    const targetElem = currentTarget as HTMLElement;\n    const id = targetElem.dataset.id;\n\n    if (id) {\n      const currentCard: CardModel | undefined = cardsStore.getCardById(id);\n\n      if (currentCard && currentCard.isCelsius) {\n        currentCard.isCelsius = false;\n        currentCard.temperature = convertToCelsius(currentCard.temperature);\n\n        cardsStore.updateCardTemperature(currentCard.temperature, id);\n        updateCardByIdInLS(currentCard, id);\n      }\n    }\n  };\n\n  const onRemoveCard = (event: React.MouseEvent) => {\n    const target = event.target as HTMLElement;\n    const id = target.parentElement?.id;\n\n    if (id) {\n      cardsStore.removeCardById(id);\n      removeCardFromLS(id);\n    }\n  };\n\n  return (\n    <main className={styles.main}>\n      {loaderStore.isLoading ? (\n        <Loader />\n      ) : (\n        cardsStore.cards.map((card: CardModel) => (\n          <Card\n            key={card.id}\n            onChangeInCelsius={onChangeInCelsius}\n            onChangeInFahrenheit={onChangeInFahrenheit}\n            onRemoveCard={onRemoveCard}\n            cardInfo={card}\n          />\n        ))\n      )}\n    </main>\n  );\n});\n\nexport default Main;\n","export const convertToCelsius = (temperature: number) => {\n  return Math.floor(temperature * (9 / 5) + 32);\n};\n\nexport const convertToFahrenheit = (temperature: number) => {\n  return Math.ceil((temperature - 32) * (5 / 9));\n};\n","import React, { useEffect } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport Header from 'components/Header';\r\nimport Main from 'components/Main';\r\n\r\nimport { useStore } from 'stores';\r\n\r\nimport { getCardsFromLS, getLangFromLS, setLangToLS } from 'services/localStorage';\r\n\r\nimport styles from './styles.module.scss';\r\n\r\nconst App = observer(() => {\r\n  const { cardsStore, languageStore } = useStore();\r\n  const { t } = useTranslation();\r\n  \r\n  useEffect(() => {\r\n    const currentLang = getLangFromLS();\r\n    const currentCards = getCardsFromLS();\r\n\r\n    if (currentCards.length) {\r\n      cardsStore.updateCards(getCardsFromLS());\r\n    }\r\n\r\n    currentLang !== '' ? languageStore.changeLang(currentLang) : setLangToLS(languageStore.lang);\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Header />\r\n      {cardsStore.cards.length === 0 ? <h2 className={styles.text}>{t('empty')}</h2> : <Main />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default App;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: `${window.origin}${process.env.REACT_APP_I18N_BACKEND_PATH}`,\r\n    },\r\n    react: {\r\n      useSuspense: false,\r\n    },\r\n    debug: true,\r\n    fallbackLng: 'en',\r\n    interpolation: {\r\n      escapeValue: false,\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './containers/App';\n\nimport 'config/i18n';\n\nimport 'normalize.css';\nimport 'sources/styles/styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}