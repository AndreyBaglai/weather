{"version":3,"sources":["components/Form/Form.tsx","services/localStorage.ts","components/SelectLanguage/SelectLanguage.tsx","components/Header/Header.tsx","variables/variables.ts","components/Card/Card.tsx","components/Main/Main.tsx","services/weather-api.ts","App.tsx","index.tsx"],"names":["Form","onSubmitForm","className","onSubmit","type","name","id","placeholder","COLLECTION_CARDS","CURRENT_LANG","setCardsToLS","cards","localStorage","setItem","JSON","stringify","getLangFromLS","lang","getItem","parse","setLangToLS","SelectLanguage","onSelectLang","onChange","defaultValue","value","Header","MONTHS","DAYS","Card","onChangeTemperature","info","city","country","time","Date","month","getMonth","day","getDay","date","getDate","formatDate","hours","getHours","minutes","getMinutes","formatTime","src","icon","alt","text_icon","temperature","xmlns","viewBox","fill","fillOpacity","d","onClick","Math","ceil","feels","description","wind_speed","humidity","pressure","Main","map","card","BASE_URL","API_KEY","getWeatherByCity","fetch","then","res","json","data","App","useState","setCards","isCelsius","setIsCelsius","setLang","useEffect","getCardsFromLS","currentLang","length","e","a","preventDefault","target","input","querySelector","cityName","dt","sys","main","temp","feels_like","weather","wind","speed","uniqCards","filter","item","console","log","newLang","currentTarget","classList","contains","temperatureEl","Number","textContent","slice","String","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f19fe86b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.scss';\r\n\r\ntype FormPropsType = {\r\n  onSubmitForm: (e: React.FormEvent) => void;\r\n};\r\n\r\nexport default function Form({ onSubmitForm }: FormPropsType) {\r\n  return (\r\n    <form className=\"form\" onSubmit={onSubmitForm}>\r\n      <input type=\"text\" className=\"city-field\" name=\"city\" id=\"city\" placeholder=\"City name...\" />\r\n      <button id=\"addBtn\">Add</button>\r\n    </form>\r\n  );\r\n}\r\n","import { CardModel } from \"../model/card-model\";\r\n\r\nconst COLLECTION_CARDS = 'cards';\r\nconst CURRENT_LANG = 'lang';\r\n\r\nexport function getCardsFromLS(): CardModel[] | [] {\r\n  const cards = localStorage.getItem(COLLECTION_CARDS);\r\n  if (cards) return JSON.parse(cards);\r\n  return []\r\n}\r\n\r\nexport function setCardsToLS(cards: CardModel[]): void {\r\n  localStorage.setItem(COLLECTION_CARDS, JSON.stringify(cards));\r\n}\r\n\r\nexport function getLangFromLS(): string {\r\n  const lang = localStorage.getItem(CURRENT_LANG);\r\n  if (lang) return JSON.parse(lang);\r\n  return '';\r\n}\r\n\r\nexport function setLangToLS(lang: string): void {\r\n  localStorage.setItem(CURRENT_LANG, JSON.stringify(lang));\r\n}\r\n\r\n","import React from 'react';\r\nimport { getLangFromLS } from '../../services/localStorage';\r\n\r\nimport './SelectLanguage.scss';\r\n\r\ntype SelectLanguagePropsType = {\r\n  onSelectLang: (e: React.ChangeEvent) => void;\r\n};\r\n\r\nexport default function SelectLanguage({ onSelectLang }: SelectLanguagePropsType) {\r\n  return (\r\n    <select name=\"language\" id=\"lang\" className=\"select-lang\" onChange={onSelectLang} defaultValue={getLangFromLS()}>\r\n      <option value=\"en\">EN</option>\r\n      <option value=\"ru\">RU</option>\r\n      <option value=\"uk\">UA</option>\r\n    </select>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Form from '../Form/Form';\r\nimport SelectLanguage from '../SelectLanguage/SelectLanguage';\r\n\r\nimport './Header.scss';\r\n\r\ntype HeaderPropsTYpe = {\r\n  onSubmitForm: (e: React.FormEvent) => void;\r\n  onSelectLang: (e: React.ChangeEvent) => void;\r\n};\r\n\r\nexport default function Header({ onSubmitForm, onSelectLang }: HeaderPropsTYpe) {\r\n  return (\r\n    <header className=\"header\">\r\n      <Form onSubmitForm={onSubmitForm} />\r\n      <SelectLanguage onSelectLang={onSelectLang} />\r\n    </header>\r\n  );\r\n}\r\n","export const MONTHS = [\r\n  'Jun',\r\n  'Feb',\r\n  'Mar',\r\n  'Apr',\r\n  'May',\r\n  'Jun',\r\n  'Jul',\r\n  'Aug',\r\n  'Sep',\r\n  'Oct',\r\n  'Nov',\r\n  'Dec',\r\n];\r\nexport const DAYS = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];","import React from 'react';\r\nimport { CardModel } from '../../model/card-model';\r\nimport { DAYS, MONTHS } from '../../variables/variables';\r\n\r\nimport './Card.scss';\r\n\r\ntype CardPropsType = {\r\n  onChangeTemperature: (e: React.MouseEvent) => void;\r\n  info: CardModel;\r\n};\r\n\r\nexport default function Card({ onChangeTemperature, info }: CardPropsType) {\r\n  const formatTime = () => {\r\n    const date = new Date();\r\n    const hours = date.getHours() < 10 ? `0${date.getHours()}` : date.getHours();\r\n    const minutes = date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes();\r\n    return `${hours}:${minutes}`;\r\n  };\r\n\r\n  const formatDate = () => {\r\n    const time = new Date();\r\n    const month = time.getMonth();\r\n    const day = time.getDay();\r\n    const date = time.getDate();\r\n\r\n    return `${DAYS[day]}, ${date} ${MONTHS[month]},`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-top\">\r\n        <div className=\"country-info\">\r\n          <div className=\"country\">\r\n            {info.city}, {info.country}\r\n          </div>\r\n          <div className=\"date\">{formatDate()} {formatTime()}</div>\r\n        </div>\r\n        <div className=\"weather-icon\">\r\n          <img className=\"icon\" src={`https://openweathermap.org/img/wn/${info.icon}@2x.png`} alt=\"Icon\" />\r\n          <p className=\"text-icon\">{info.text_icon}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"graphic\">\r\n        {info.temperature > 0 ? (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n            <path\r\n              fill=\"#ff715b\"\r\n              fillOpacity=\"1\"\r\n              d=\"M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,250.7C1248,256,1344,288,1392,304L1440,320L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\r\n          </svg>\r\n        ) : (\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1440 320\">\r\n            <path\r\n              fill=\"#5ba8ff\"\r\n              fillOpacity=\"1\"\r\n              d=\"M0,288L48,272C96,256,192,224,288,197.3C384,171,480,149,576,165.3C672,181,768,235,864,250.7C960,267,1056,245,1152,250.7C1248,256,1344,288,1392,304L1440,320L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z\"></path>\r\n          </svg>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"card-bottom\">\r\n        <div className=\"temperature-wrapper\" onClick={onChangeTemperature}>\r\n          <div className=\"main-temperature\">\r\n            <span className=\"temperature\">\r\n              {Math.ceil(info.temperature) > 0\r\n                ? `+${Math.ceil(info.temperature)}`\r\n                : `-${Math.ceil(info.temperature)}`}\r\n            </span>\r\n            <span className=\"metric\">\r\n              <span className=\"celsius\">&deg;C</span> |<span className=\"fahrenheit\">&deg;F</span>\r\n            </span>\r\n          </div>\r\n          <div className=\"feels\">\r\n            Feels like:{' '}\r\n            {Math.ceil(info.feels) > 0 ? `+${Math.ceil(info.feels)}` : `-${Math.ceil(info.feels)}`}\r\n          </div>\r\n        </div>\r\n        <div className=\"weather-info\">\r\n          <p>{info.description}</p>\r\n          <p>\r\n            Wind: <span className=\"value\">{info.wind_speed}m/s</span>\r\n          </p>\r\n          <p>\r\n            Humidity: <span className=\"value\">{info.humidity}%</span>\r\n          </p>\r\n          <p>\r\n            Pressure: <span className=\"value\">{info.pressure}Pa</span>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { CardModel } from '../../model/card-model';\r\nimport Card from '../Card/Card';\r\n\r\nimport './Main.scss';\r\n\r\ntype MainPropsType = {\r\n  onChangeTemperature: (e: React.MouseEvent) => void;\r\n  cards: CardModel[];\r\n};\r\n\r\nexport default function Main({ onChangeTemperature, cards }: MainPropsType) {\r\n  return (\r\n    <main className=\"main\">\r\n      {cards.map((card) => (\r\n        <Card\r\n          key={card.time + card.city}\r\n          onChangeTemperature={onChangeTemperature}\r\n          info={card}\r\n        />\r\n      ))}\r\n    </main>\r\n  );\r\n}\r\n","const BASE_URL = 'https://api.openweathermap.org/data/2.5/';\r\nconst API_KEY = '2904218e66790986ea8f1701ca13b7b5';\r\n\r\nexport function getWeatherByCity(city: string, lang = 'en') {\r\n  return fetch(\r\n    `${BASE_URL}weather?q=${city}&units=metric&lang=${lang}&appid=${API_KEY}`,\r\n  )\r\n    .then((res) => res.json())\r\n    .then((data) => data);\r\n}","import React, { useEffect, useState } from 'react';\n\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\nimport { CardModel } from './model/card-model';\nimport { getCardsFromLS, getLangFromLS, setCardsToLS, setLangToLS } from './services/localStorage';\nimport { getWeatherByCity } from './services/weather-api';\n\nimport './App.scss';\n\nfunction App() {\n  const [cards, setCards] = useState<CardModel[]>([]);\n  const [isCelsius, setIsCelsius] = useState(true);\n  const [lang, setLang] = useState('en');\n\n  useEffect(() => {\n    const cards = getCardsFromLS();\n    const currentLang = getLangFromLS();\n\n    if (cards.length) {\n      setCards(cards);\n    }\n\n    currentLang !== '' ? setLang(currentLang) : setLangToLS(lang);\n  }, [lang]);\n\n  const onSubmitForm = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const target = e.target as HTMLFormElement;\n    const input = target.querySelector('#city') as HTMLInputElement;\n    const cityName = input.value;\n\n    try {\n      if (cityName === '') return;\n\n      const data = await getWeatherByCity(cityName, lang);\n      if (!data) return;\n\n      const card: CardModel = {\n        city: data.name,\n        time: data.dt,\n        country: data.sys.country,\n        temperature: data.main.temp,\n        humidity: data.main.humidity,\n        pressure: data.main.pressure,\n        feels: data.main.feels_like,\n        icon: data.weather[0].icon,\n        text_icon: data.weather[0].main,\n        description: data.weather[0].description,\n        wind_speed: data.wind.speed,\n      };\n\n      const uniqCards = cards.filter((item) => item.city !== card.city);\n      input.value = '';\n\n      setCardsToLS([card, ...uniqCards]);\n      setCards([card, ...uniqCards]);\n    } catch (err) {\n      input.value = '';\n      console.log('Incorrect city name');\n    }\n  };\n\n  const onChangeTemperature = (e: React.MouseEvent) => {\n    const currentTarget = e.currentTarget as HTMLElement;\n    const target = e.target as HTMLElement;\n\n    if (\n      (target.classList.contains('fahrenheit') && !isCelsius) ||\n      (target.classList.contains('celsius') && isCelsius)\n    ) {\n      return;\n    }\n\n    const temperatureEl = currentTarget.querySelector('.temperature') as HTMLElement;\n    const temperature = Number(\n      isCelsius ? temperatureEl?.textContent?.slice(1) : temperatureEl?.textContent,\n    );\n\n    if (target.classList.contains('fahrenheit') && temperatureEl) {\n      temperatureEl.textContent = String(Math.ceil((temperature * 9) / 5 + 32));\n      setIsCelsius(false);\n    } else {\n      const temp = Math.floor((5 / 9) * (temperature - 32));\n      temperatureEl.textContent = String(temp > 0 ? `+${temp}` : `-${temp}`);\n      setIsCelsius(true);\n    }\n  };\n\n  const onSelectLang = (e: React.ChangeEvent) => {\n    const target = e.target as HTMLOptionElement;\n    const newLang = target.value\n    setLangToLS(newLang);\n    setLang(newLang);\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onSubmitForm={onSubmitForm} onSelectLang={onSelectLang} />\n      {!cards.length ? (\n        <p>Please, input city name</p>\n      ) : (\n        <Main onChangeTemperature={onChangeTemperature} cards={cards} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}